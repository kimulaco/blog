---
import MultiColumnLayout from '@/layouts/MultiColumnLayout.astro'
import AppHeading from '@/components/modules/AppHeading/index.astro'
import ArticleContent from '@/components/modules/ArticleContent/index.vue'
import ArticleItem from '@/components/modules/ArticleItem/index.astro'
import ArticleTags from '@/components/modules/ArticleTags/index.vue'
import ArticleTimestamp from '@/components/modules/ArticleTimestamp/index.vue'
import JsonldBlogPosting from '@/components/jsonld/JsonldBlogPosting.astro'
import JsonldBreadcrumbList from '@/components/jsonld/JsonldBreadcrumbList.astro'
import { createBreadcrumbList } from '@/core/domains/breadcrumb'
import { getArticleDetail, getAllArticles } from '@/core/domains/article'
import { APP_CONFIG } from '@@/config/app'

const { id } = Astro.params

if (!id) {
  return Astro.redirect('/404')
}

const article = await getArticleDetail(id)

const breadcrumbs = createBreadcrumbList([
  { url: `/article/${article.id}`, text: article.title },
])

export const getStaticPaths = async () => {
  const articles = await getAllArticles()
  return articles.map((article) => ({ params: { id: article.id } }))
}
---

<MultiColumnLayout
  title={`${article.title} - @kimulaco/blog`}
  description={`${APP_CONFIG.META.DESCRIPTION}${article.description}`}
  currentPath={`/article/${id}`}
  ogpImagePath={`/article/${id}/ogp.png`}
>
  <JsonldBlogPosting article={article} slot="head" />
  <JsonldBreadcrumbList breadcrumbs={breadcrumbs} slot="head" />

  <div class="PagePostDetail">
    <article class="PostDetail">
      <div class="PostDetail_head">
        <h1 class="PostDetail_heading">{article.title}</h1>
        <ArticleTimestamp
          createdAt={article.created_at}
          updatedAt={article.updated_at}
        />

        {
          (article.tag ?? []).length > 0 && (
            <div class="PostDetail_tags">
              <ArticleTags tags={article.tag} />
            </div>
          )
        }

        {
          article.image && (
            <img src={article.image.url} class="PostDetail_image" alt="" />
          )
        }
      </div>

      <div class="PostDetail_content">
        <!-- eslint-disable vue/no-v-html -->
        <ArticleContent content={article.content} />
        <!-- eslint-enable vue/no-v-html -->
      </div>
    </article>

    {
      article.related_posts.length > 0 && (
        <aside class="PostDetail_related">
          <AppHeading>関連記事</AppHeading>
          <div>
            {article.related_posts.map((relatedArticle) => {
              return <ArticleItem article={relatedArticle} />
            })}
          </div>
        </aside>
      )
    }
  </div>
</MultiColumnLayout>

<style scoped lang="scss">
  @use '../../assets/scss/mixins.scss' as mixins;

  .PostDetail {
    position: relative;
  }

  .PostDetail_head {
    padding: 0 0 16px;
  }

  .PostDetail_heading {
    font-size: 28px;
    padding: 5px 0;
    margin: 0 0 8px;
    line-height: 1.4;

    @include mixins.media() {
      font-size: 32px;
    }
  }

  .PostDetail_tags {
    margin: 8px 0 0;
  }

  .PostDetail_image {
    margin: 0 0 16px;

    @include mixins.media() {
      margin: 0 0 32px;
    }
  }

  .PostDetail_content {
    margin: 0;
    padding: 16px 0 20px;

    @include mixins.media() {
      padding: 16px 0 32px;
    }
  }

  .PostDetail_related {
    padding: 0 10px;
  }
</style>
