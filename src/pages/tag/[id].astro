---
import MultiColumnLayout from '@/layouts/MultiColumnLayout/index.astro'
import AppLinkButton from '@/components/modules/AppLinkButton/index.astro'
import PageTitle from '@/components/modules/PageTitle/index.astro'
import ArticleItem from '@/components/modules/ArticleItem/index.astro'
import JsonldBreadcrumbList from '@/components/jsonld/JsonldBreadcrumbList/index.astro'
import { createBreadcrumbList } from '@/core/domains/breadcrumb'
import {
  getUsedAllTags,
  getTagDetail,
  getAllArticles,
} from '@/core/domains/article'
import { APP_CONFIG } from '@@/config/app'

const { id } = Astro.params

if (!id) {
  return {
    redirect: '/404',
  }
}

const tag = await getTagDetail(id)
const articles = await getAllArticles({
  filters: `tag[contains]${id}`,
})
const hasArticles = articles.length > 0

const breadcrumbs = createBreadcrumbList([
  {
    text: 'タグ',
    url: '/tag',
  },
  {
    text: `"${tag.name}"のタグを持つ記事`,
    url: `/tag/${tag.id}`,
  },
])

export const getStaticPaths = async () => {
  const allTags = await getUsedAllTags()

  return allTags
    .filter((tag) => !!tag.id)
    .map((tag) => ({ params: { id: tag.id } }))
}
---

<MultiColumnLayout
  title={`"${tag.name}"のタグを持つ記事 - @kimulaco/blog`}
  description={`${APP_CONFIG.META.DESCRIPTION}${tag.name}のタグを持つ記事一覧。`}
  currentPath={`/tag/${tag.id}`}
>
  <JsonldBreadcrumbList breadcrumbs={breadcrumbs} slot="head" />

  <PageTitle>"{tag.name}"のタグを持つ記事</PageTitle>

  {
    hasArticles && (
      <div>
        {articles.map((article) => {
          return <ArticleItem article={article} />
        })}
      </div>
    )
  }

  {
    !hasArticles && (
      <>
        <p class="mb-32">
          <b>"{tag.name}"</b>のタグを持つ記事はありません。
        </p>
        <AppLinkButton href="/">トップページへ</AppLinkButton>
      </>
    )
  }
</MultiColumnLayout>
