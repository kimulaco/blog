name: Deploy to production

on:
  push:
    branches:
      - main

env:
  MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
  MICROCMS_SERVICE_DOMAIN: ${{ secrets.MICROCMS_SERVICE_DOMAIN }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_PROJECT_NAME: ${{ secrets.SENTRY_PROJECT_NAME }}

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.9']
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init-node
      - uses: ./.github/actions/lint

  unit_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.9']
    env:
      GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID_PROD }}
      APP_HOST: ${{ secrets.APP_HOST_PROD }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init-node
      - uses: ./.github/actions/unit-test

  build_prod:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.9']
    env:
      GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID_PROD }}
      APP_HOST: ${{ secrets.APP_HOST_PROD }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init-node
      - run: pnpm run build:prod
      - uses: actions/upload-artifact@v3
        with:
          name: build-prod-dist
          path: dist

  e2e_test:
    runs-on: ubuntu-latest
    needs: [build_prod]
    strategy:
      matrix:
        node-version: ['20.9']
    env:
      GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID_PROD }}
      APP_HOST: ${{ secrets.APP_HOST_PROD }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init-node
      - uses: actions/download-artifact@v3
        with:
          name: build-prod-dist
          path: dist
      - uses: ./.github/actions/e2e-test

  deploy_prod:
    runs-on: ubuntu-latest
    needs: [lint, unit_test, e2e_test]
    environment:
      name: Production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
      AWS_S3_REGION: ${{ secrets.AWS_S3_REGION_PROD }}
      AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME_PROD }}
      AWS_CLOUDFRONT_DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_PROD }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: build-prod-dist
          path: dist
      - uses: ./.github/actions/deploy
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_S3_REGION }}
          aws-s3-bucket-name: ${{ env.AWS_S3_BUCKET_NAME }}
          aws-s3-upload-dir: dist
          aws-cloudfront-distribution: ${{ env.AWS_CLOUDFRONT_DISTRIBUTION }}

  create_version:
    runs-on: ubuntu-latest
    needs: [deploy_prod]
    strategy:
      matrix:
        node-version: ['20.9']
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init-node
      - uses: ./.github/actions/init-git
      - run: pnpm exec zx ./.github/scripts/create-version-tag.mjs
        shell: bash
