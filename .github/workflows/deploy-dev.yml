name: Deploy to development

on:
  push:
    branches:
      - develop

env:
  MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
  MICROCMS_SERVICE_DOMAIN: ${{ secrets.MICROCMS_SERVICE_DOMAIN }}
  GOOGLE_ADS_CLIENT: ${{ secrets.GOOGLE_ADS_CLIENT }}
  GOOGLE_ADS_SIDE_AD_SLOT_ID: ${{ secrets.GOOGLE_ADS_SIDE_AD_SLOT_ID }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_PROJECT_NAME: ${{ secrets.SENTRY_PROJECT_NAME }}

jobs:
  check_pr:
    runs-on: ubuntu-latest
    outputs:
      is_open_pr: ${{ steps.check_pr.outputs.is_open_pr }}
    steps:
      - uses: actions/checkout@v4
      - id: check_pr
        run: |
          PR_COUNT=$(gh pr list --base main --head develop --json number --jq length)
          echo "is_open_pr=$([ "$PR_COUNT" -gt 0 ] && echo 'true' || echo 'false')" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init-pnpm
      - uses: ./.github/actions/lint

  unit_test:
    runs-on: ubuntu-latest
    env:
      GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID_DEV }}
      NEW_RELIC_APP_ID: ${{ secrets.NEW_RELIC_APP_ID_DEV }}
      NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
      NEW_RELIC_LICENCE_KEY: ${{ secrets.NEW_RELIC_LICENCE_KEY }}
      APP_HOST: ${{ secrets.APP_HOST_DEV }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init-pnpm
      - run: pnpm run test:unit

  build_dev:
    runs-on: ubuntu-latest
    env:
      GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID_DEV }}
      NEW_RELIC_APP_ID: ${{ secrets.NEW_RELIC_APP_ID_DEV }}
      NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
      NEW_RELIC_LICENCE_KEY: ${{ secrets.NEW_RELIC_LICENCE_KEY }}
      APP_HOST: ${{ secrets.APP_HOST_DEV }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init-pnpm
      - run: pnpm run build:dev
      - uses: actions/upload-artifact@v4
        with:
          name: build-dev-dist
          path: dist

  e2e_test:
    runs-on: ubuntu-latest
    needs: [build_dev]
    env:
      GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID_DEV }}
      NEW_RELIC_APP_ID: ${{ secrets.NEW_RELIC_APP_ID_DEV }}
      NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
      NEW_RELIC_LICENCE_KEY: ${{ secrets.NEW_RELIC_LICENCE_KEY }}
      APP_HOST: ${{ secrets.APP_HOST_DEV }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init-pnpm
      - uses: actions/download-artifact@v4
        with:
          name: build-dev-dist
          path: dist
      - run: pnpm run test:e2e

  deploy_dev:
    runs-on: ubuntu-latest
    needs: [lint, unit_test, e2e_test, check_pr]
    if: needs.check_pr.outputs.is_open_pr == 'true'
    environment:
      name: development
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
      AWS_S3_REGION: ${{ secrets.AWS_S3_REGION_DEV }}
      AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME_DEV }}
      AWS_CLOUDFRONT_DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_DEV }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-dev-dist
          path: dist
      - uses: ./.github/actions/deploy
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_S3_REGION }}
          aws-s3-bucket-name: ${{ env.AWS_S3_BUCKET_NAME }}
          aws-s3-upload-dir: dist
          aws-cloudfront-distribution: ${{ env.AWS_CLOUDFRONT_DISTRIBUTION }}
