name: Deploy

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - '*'

env:
  MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
  MICROCMS_SERVICE_DOMAIN: ${{ secrets.MICROCMS_SERVICE_DOMAIN }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_PROJECT_NAME: ${{ secrets.SENTRY_PROJECT_NAME }}

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.9']
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - run: pnpm i
      - run: pnpm run lint:format
      - run: pnpm run lint:script
      - run: pnpm run lint:style

  unit_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.9']
    env:
      GA_TRACKING_ID: ${{ secrets.TEST_GA_TRACKING_ID }}
      APP_HOST: ${{ secrets.TEST_APP_HOST }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - run: pnpm i
      - run: pnpm run test:unit:cov
      - uses: codecov/codecov-action@v3
        with:
          files: ./.coverage/coverage-final.json

  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.9']
    env:
      GA_TRACKING_ID: ${{ secrets.TEST_GA_TRACKING_ID }}
      APP_HOST: ${{ secrets.TEST_APP_HOST }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - run: pnpm i
      - run: pnpm run build:dev

  build_dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    strategy:
      matrix:
        node-version: ['20.9']
    env:
      GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}
      APP_HOST: ${{ secrets.APP_HOST }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - run: pnpm i
      - run: pnpm run build:dev
      - uses: actions/upload-artifact@v3
        with:
          name: build-dev-dist
          path: dist

  deploy_dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    needs: [lint, unit_test, build_dev]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
      AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
      AWS_CLOUDFRONT_DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: build-dev-dist
          path: dist
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_S3_REGION }}
      - run: aws s3 sync dist s3://${{ env.AWS_S3_BUCKET_NAME }} --delete --exact-timestamps
      - run: aws cloudfront create-invalidation --distribution-id ${{ env.AWS_CLOUDFRONT_DISTRIBUTION }} --paths "/*"
